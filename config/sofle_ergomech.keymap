/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        escgrv: escgrv {
            compatible = "zmk,behavior-mod-morph";
            label = "ESCGRV";
            bindings = <&kp GRAVE>, <&kp ESCAPE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        wincontrol: wincontrol {
            compatible = "zmk,behavior-tap-dance";
            label = "WINCONTROL";
            #binding-cells = <0>;
            bindings = <&kp LA(LG(K))>, <&kp LG(L)>, <&kp LS(LC(ESCAPE))>;
        };

        wintap: wintap {
            compatible = "zmk,behavior-hold-tap";
            label = "WINTAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&wincontrol>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&escgrv                     &kp N1    &kp N2    &kp N3     &kp N4    &kp N5       &kp N6       &kp N7     &kp N8        &kp N9    &kp N0     &kp BSPC
&lt 3 MINUS                 &kp Q     &kp W     &kp E      &kp R     &kp T        &kp Y        &kp U      &kp I         &kp O     &kp P      &lt 4 BACKSLASH
&kp TAB                     &kp A     &kp S     &kp D      &kp F     &kp G        &kp H        &kp J      &kp K         &kp L     &kp SEMI   &kp SQT
&mt LSHFT LEFT_PARENTHESIS  &kp Z     &kp X     &kp C      &kp V     &kp B        &kp N        &kp M      &kp COMMA     &kp DOT   &kp FSLH   &mt RIGHT_SHIFT ENTER
&wintap LA(LC(DELETE)) 0    &kp LGUI  &kp LALT  &kp LCTRL  &kp LALT  &lt 1 ENTER  &lt 2 SPACE  &kp LEFT   &kp DOWN      &kp UP    &kp RIGHT
                                                                                  &kp ENTER    &kp RIGHT  &kp UP_ARROW  &kp LEFT  &kp DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_DN &inc_dec_kp PG_UP PG_UP>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0        &trans
&trans  &kp Y            &kp U            &kp I            &kp O            &kp P            &kp LEFT_BRACKET      &kp N7           &kp N8           &kp N9           &kp RBKT               &trans
&trans  &kp H            &kp J            &kp K            &kp L            &kp SEMI         &kp LEFT_BRACE        &kp N4           &kp N5           &kp N6           &kp RIGHT_BRACE        &trans
&trans  &kp N            &kp M            &kp COMMA        &kp DOT          &kp FSLH         &kp LEFT_PARENTHESIS  &kp N1           &kp N2           &kp N3           &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans           &trans           &trans           &trans           &trans                &kp N0           &kp DOT          &trans           &trans
                                                                                             &kp A                 &kp B            &kp C            &kp D            &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &kp ESC           &kp PG_DN     &kp LS(UP)    &kp PG_UP      &kp SPACE          &none   &kp F10  &kp F11  &kp F12  &none   &trans
&trans  &kp PG_UP         &kp LEFT      &kp UP        &kp RIGHT      &kp LG(BSPC)       &none   &kp F7   &kp F8   &kp F9   &none   &trans
&trans  &kp HOME          &kp LEFT      &kp DOWN      &kp RIGHT      &kp END            &none   &kp F4   &kp F5   &kp F6   &none   &trans
&trans  &kp LS(LC(LEFT))  &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(RIGHT)  &kp LS(LC(RIGHT))  &none   &kp F1   &kp F2   &kp F3   &none   &trans
&trans  &trans            &trans        &trans        &trans         &trans             &trans  &trans   &trans   &trans   &trans
                                                                                        &kp A   &kp B    &kp C    &kp D    &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&kp ESC     &kp ESC  &kp ESC  &kp ESC  &kp ESC  &kp ESC  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)   &trans
&trans      &kp ESC  &kp ESC  &kp ESC  &kp ESC  &kp ESC  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)   &trans
&kp ESC     &kp ESC  &kp ESC  &none    &none    &none    &kp LS(PLUS)   &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(DQT)    &trans
&caps_word  &none    &none    &none    &none    &none    &kp LS(PIPE)   &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(TILDE)  &trans
&kp ESC     &none    &none    &none    &none    &none    &none          &none         &none          &none          &none
                                                         &kp A          &kp B         &kp C          &kp D          &kp E
            >;
        };

        layer_4 {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &sys_reset    &bootloader   &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
                                                                                      &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
