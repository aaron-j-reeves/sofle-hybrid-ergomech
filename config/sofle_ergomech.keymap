/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define qwerty 0
#define gaming 1
#define lower 2
#define raise 3
#define adjust 4
#define lower_alt 5
#define raise_alt 6
#define adjust_alt 7

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <2 3>;
            then-layer = <4>;
        };

        adjust_alt {
            if-layers = <5 6>;
            then-layer = <7>;
        };

        doublelower {
            if-layers = <2 5>;
            then-layer = <4>;
        };

        doubleraise {
            if-layers = <3 6>;
            then-layer = <7>;
        };
    };

    behaviors {
        escgrv: escgrv {
            compatible = "zmk,behavior-mod-morph";
            label = "ESCGRV";
            bindings = <&kp GRAVE>, <&kp ESCAPE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        wincontrol: wincontrol {
            compatible = "zmk,behavior-tap-dance";
            label = "WINCONTROL";
            #binding-cells = <0>;
            bindings = <&kp LA(LG(K))>, <&kp LG(L)>, <&kp LS(LC(ESCAPE))>;

            tapping-term-ms = <400>;
        };

        wintap: wintap {
            compatible = "zmk,behavior-hold-tap";
            label = "WINTAP";
            #binding-cells = <2>;
            tapping-term-ms = <400>;
            bindings = <&kp>, <&wincontrol>;
        };

        TDpar: TDpar {
            compatible = "zmk,behavior-tap-dance";
            label = "TDPAR";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            tapping-term-ms = <250>;
        };

        MTpar: MTpar {
            compatible = "zmk,behavior-hold-tap";
            label = "MTPAR";
            bindings = <&kp>, <&TDpar>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ShiftDel: ShiftDel {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFTDEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        LTescgrv: LTescgrv {
            compatible = "zmk,behavior-hold-tap";
            label = "LTESCGRV";
            bindings = <&mo>, <&escgrv>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
        };

        LTshiftdel: LTshiftdel {
            compatible = "zmk,behavior-hold-tap";
            label = "LTSHIFTDEL";
            bindings = <&mo>, <&ShiftDel>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
        };

        TDundoredo: TDundoredo {
            compatible = "zmk,behavior-tap-dance";
            label = "TDUNDOREDO";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>, <&kp LC(Y)>;

            tapping-term-ms = <250>;
        };

        enterspace: enterspace {
            compatible = "zmk,behavior-hold-tap";
            label = "ENTERSPACE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            quick-tap-ms = <500>;
            flavor = "tap-preferred";
        };

        LTraiseup: LTraiseup {
            compatible = "zmk,behavior-hold-tap";
            label = "LTRAISEUP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };

        LTlowtab: LTlowtab {
            compatible = "zmk,behavior-hold-tap";
            label = "LTLOWTAB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <41 40>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <40 39>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <39 38>;
        };

        undoredo {
            bindings = <&TDundoredo>;
            key-positions = <37 38>;
        };

        pwc1 {
            bindings = <&pw1>;
            key-positions = <0 12 24 36 49>;
        };

        pwc2 {
            bindings = <&pw2>;
            key-positions = <11 23 35 47 58>;
        };

        cm90 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <10 9>;
        };

        cm89 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 8>;
        };

        cm78 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 7>;
        };

        cm67 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <6 7>;
        };

        cmtaba {
            bindings = <&caps_word>;
            key-positions = <24 25>;
        };

        cmgaming {
            bindings = <&tog 1>;
            key-positions = <28 27 26 25 31 32 33 34>;
        };

        cmrt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <5 4>;
        };

        cmer {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
        };
    };

    macros {
        pw1: pw1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp MINUS &kp LS(N) &kp LT &kp LS(U) &kp LS(X) &kp N8 &kp AT &kp N &kp N0 &kp LS(P) &kp LS(R) &kp LS(W)>;
            label = "PW1";
        };

        pw2: pw2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp B &kp LS(M) &kp LS(J) &kp L &kp RPAR &kp O &kp LS(Q) &kp LS(F) &kp V &kp K &kp N9 &kp V>;
            label = "PW2";
        };

        doubledash: doubledash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp KP_MINUS>;
            label = "DOUBLEDASH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            label = "qwerty";
            bindings = <
&LTescgrv 5 0             &kp N1        &kp N2                    &kp N3               &kp N4           &kp N5     &kp N6           &kp N7             &kp N8        &kp N9    &kp N0     &LTshiftdel 6 0
&kp MINUS                 &kp Q         &kp W                     &kp E                &kp R            &kp T      &kp Y            &kp U              &kp I         &kp O     &kp P      &kp BACKSLASH
&kp TAB                   &kp A         &kp S                     &kp D                &kp F            &kp G      &kp H            &kp J              &kp K         &kp L     &kp SEMI   &kp SQT
&MTpar LEFT_SHIFT 0       &kp Z         &kp X                     &kp C                &kp V            &kp B      &kp N            &kp M              &kp COMMA     &kp DOT   &kp FSLH   &mt RIGHT_SHIFT KP_ENTER
&wintap LA(LC(DELETE)) 0  &mt LGUI F24  &mt LEFT_CONTROL LG(TAB)  &mt LEFT_ALT DELETE  &lt 2 BACKSPACE  &kp ENTER  &kp SPACE        &LTraiseup 3 LEFT  &kp DOWN      &kp UP    &kp RIGHT
                                                                                                                   &kp PRINTSCREEN  &kp RIGHT          &kp UP_ARROW  &kp LEFT  &kp DOWN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOLUME_UP>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        gaming_layer {
            label = "gaming";
            bindings = <
&LTescgrv 5 0                    &kp N1        &kp N2               &kp N3               &kp N4           &kp N5                   &kp N6           &kp N7                 &kp N8                    &kp N9                      &kp N0                &LTshiftdel 6 0
&doubledash                      &kp Q         &kp W                &kp E                &kp R            &kp T                    &kp Y            &kp U                  &kp I                     &kp O                       &kp P                 &kp BACKSLASH
&kp TAB                          &kp A         &kp S                &kp D                &kp F            &kp G                    &kp H            &kp J                  &kp K                     &kp L                       &kp SEMI              &kp SQT
&mt LEFT_SHIFT LEFT_PARENTHESIS  &kp Z         &kp X                &kp C                &kp V            &kp B                    &kp N            &kp M                  &kp COMMA                 &kp DOT                     &kp FSLH              &mt RIGHT_SHIFT KP_ENTER
&kp F14                          &mt LGUI F24  &mt LEFT_CONTROL N0  &mt LEFT_ALT DELETE  &lt 2 BACKSPACE  &enterspace ENTER SPACE  &kp SPACE        &LTraiseup 3 LEFT      &kp DOWN                  &kp UP                      &kp RIGHT
                                                                                                                                   &kp PRINTSCREEN  &kp LS(LA(LC(RIGHT)))  &kp LS(LA(LC(UP_ARROW)))  &kp LS(LA(LC(LEFT_ARROW)))  &kp LS(LA(LC(DOWN)))
            >;

            sensor-bindings =
                <&inc_dec_kp LS(LA(LC(PAGE_DOWN))) LS(LA(LC(PAGE_UP)))>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        lower_layer {
            label = "lower";
            bindings = <
&kp ESC  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0        &trans
&trans   &kp Y            &kp U            &kp I            &kp O            &kp P            &kp LEFT_BRACKET      &kp N7           &kp N8           &kp N9           &kp RBKT               &trans
&trans   &kp H            &kp J            &kp K            &kp L            &kp SEMI         &kp LEFT_BRACE        &kp N4           &kp N5           &kp N6           &kp RIGHT_BRACE        &trans
&trans   &kp N            &kp M            &kp COMMA        &kp DOT          &kp FSLH         &kp LEFT_PARENTHESIS  &kp N1           &kp N2           &kp N3           &kp RIGHT_PARENTHESIS  &trans
&trans   &trans           &trans           &trans           &trans           &trans           &kp MINUS             &trans           &kp N0           &kp PERIOD       &kp EQUAL
                                                                                              &kp KP_ENTER          &kp RIGHT        &kp UP_ARROW     &kp LEFT_ARROW   &kp DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";
            bindings = <
&trans        &kp ESC           &kp PG_DN     &kp LS(UP)    &kp PG_UP      &kp LC(SPACE)      &none           &none           &none           &none            &none     &trans
&kp KP_MINUS  &kp PG_UP         &kp LC(LEFT)  &kp UP        &kp LC(RIGHT)  &kp LG(BSPC)       &msc MOVE_UP    &msc MOVE_LEFT  &mmv MOVE_UP    &msc MOVE_RIGHT  &mkp MB4  &trans
&trans        &kp HOME          &kp LEFT      &kp DOWN      &kp RIGHT      &kp END            &msc MOVE_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5  &trans
&trans        &kp LS(LC(LEFT))  &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(RIGHT)  &kp LS(LC(RIGHT))  &mkp MB1        &mkp MB2        &mkp MB3        &none            &none     &trans
&trans        &trans            &trans        &trans        &trans         &trans             &trans          &trans          &trans          &trans           &trans
                                                                                              &none           &none           &none           &none            &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            label = "adjust";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4  &tog 1       &none           &none            &none       &kp LC(LA(DEL))     &trans
&trans  &none         &none         &none         &bt BT_CLR_ALL     &bt BT_CLR    &none        &none           &kp C_VOLUME_UP  &none       &kp LC(LS(ESCAPE))  &trans
&trans  &sys_reset    &none         &none         &ext_power EP_TOG  &out OUT_TOG  &none        &kp C_PREVIOUS  &kp C_VOL_DN     &kp C_NEXT  &kp LG(R)           &trans
&trans  &bootloader   &none         &none         &none              &tog 1        &bootloader  &none           &none            &none       &kp LG(L)           &trans
&none   &trans        &trans        &trans        &trans             &pw1          &pw2         &trans          &trans           &trans      &trans
                                                                                   &none        &none           &none            &none       &none
            >;
        };

        lower_alt {
            label = "lower_alt";
            bindings = <
&trans  &kp F1     &kp F2     &kp F3         &kp F4            &kp F5        &kp F6     &kp F7           &kp F8           &kp F9                &kp F10      &trans
&trans  &kp LS(Y)  &kp LS(U)  &kp LS(I)      &kp LS(O)         &kp LS(P)     &kp F11    &kp AMPERSAND    &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp F12      &trans
&trans  &kp LS(H)  &kp LS(J)  &kp LS(K)      &kp LS(L)         &kp COLON     &none      &kp DOLLAR       &kp PERCENT      &kp CARET             &none        &trans
&trans  &kp LS(N)  &kp LS(M)  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &none      &kp EXCLAMATION  &kp AT_SIGN      &kp HASH              &none        &trans
&trans  &trans     &trans     &trans         &trans            &trans        &kp UNDER  &trans           &kp KP_NUMBER_0  &kp KP_DOT            &kp KP_PLUS
                                                                             &trans     &trans           &trans           &trans                &trans
            >;
        };

        raise_alt {
            label = "raise_alt";
            bindings = <
&trans  &kp ESC           &kp PG_DN     &kp LS(UP)    &kp PG_UP      &kp LC(SPACE)      &none           &none           &none           &none            &none     &trans
&trans  &kp PG_UP         &kp LC(LEFT)  &kp UP        &kp LC(RIGHT)  &kp LG(BSPC)       &msc MOVE_UP    &msc MOVE_LEFT  &mmv MOVE_UP    &msc MOVE_RIGHT  &mkp MB4  &trans
&trans  &kp HOME          &kp LEFT      &kp DOWN      &kp RIGHT      &kp END            &msc MOVE_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5  &trans
&trans  &kp LS(LC(LEFT))  &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(RIGHT)  &kp LS(LC(RIGHT))  &mkp MB1        &mkp MB2        &mkp MB3        &none            &none     &trans
&trans  &trans            &trans        &trans        &trans         &trans             &trans          &trans          &trans          &trans           &trans
                                                                                        &none           &none           &none           &none            &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        adjust_alt {
            label = "adjust_alt";
            bindings = <
&trans  &none            &none            &rgb_ug RGB_ON   &none            &rgb_ug RGB_TOG  &kp KP_NUMLOCK   &kp F10  &kp F11  &kp F12  &none  &trans
&none   &none            &rgb_ug RGB_SAD  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &none            &kp SCROLLLOCK   &kp F7   &kp F8   &kp F9   &none  &none
&none   &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &kp INSERT       &kp F4   &kp F5   &kp F6   &none  &none
&none   &none            &rgb_ug RGB_HUD  &rgb_ug RGB_OFF  &rgb_ug RGB_HUI  &none            &kp PRINTSCREEN  &kp F1   &kp F2   &kp F3   &none  &none
&none   &none            &none            &none            &trans           &none            &none            &trans   &none    &none    &none
                                                                                             &none            &none    &none    &none    &none
            >;
        };
    };
};
